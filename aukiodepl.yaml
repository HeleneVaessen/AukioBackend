apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    type: LoadBalancer
    loadBalancerIP: 20.91.190.130
    ports:
    - name: "http"
      port: 80
      targetPort: 80
      nodePort: 30000
    - name: "https"
      port: 443
      targetPort: 443
      nodePort: 30001
    selector:
      io.kompose.service: apigateway


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authenticationservice
    name: authenticationservice
  spec:
    ports:
    - name: "http"
      port: 80
      targetPort: 80
    - name: "https"
      port: 443
      targetPort: 443
    selector:
      io.kompose.service: authenticationservice
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbit
    name: rabbit
  spec:
    ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "5672"
      port: 5672
      targetPort: 5672
    selector:
      io.kompose.service: rabbit
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-express
    name: mongo-express
  spec:
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      io.kompose.service: mongo-express
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: aukiodb
    name: aukiodb
  spec:
    ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "1443"
      port: 1433
      targetPort: 1433
    selector:
      io.kompose.service: aukiodb
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userservice
    name: userservice
  spec:
    ports:
    - name: "http"
      port: 80
      targetPort: 80
    - name: "https"
      port: 443
      targetPort: 443
    selector:
      io.kompose.service: userservice
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: summaryservice
    name: summaryservice
  spec:
    ports:
    - name: "http"
      port: 80
      targetPort: 80
    - name: "https"
      port: 443
      targetPort: 443
    selector:
      io.kompose.service: summaryservice
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: consul
    name: consul
  spec:
    type: LoadBalancer
    ports:
    - name: "8500"
      port: 8500
      targetPort: 8500
    selector:
      io.kompose.service: consul

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: apigateway
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: apigateway
      spec:
        containers:
        - image: leenpeen/apigateway:latest
          imagePullPolicy: Always
          name: apigateway
          ports:
          - containerPort: 80
          - containerPort: 443
          env:
            - name: "ASPNETCORE_ENVIRONMENT"
              value: ""
          resources: 
            requests:
                cpu: 40m
                memory: 128Mi
            limits:
                cpu: 120m
                memory: 256Mi
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: authenticationservice
    name: authenticationservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: authenticationservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: authenticationservice
      spec:
        containers:
        - image: leenpeen/authenticationservice:latest
          imagePullPolicy: Always
          name: authenticationservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: 
            requests:
                cpu: 100m
                memory: 128Mi
            limits:
                cpu: 250m
                memory: 256Mi
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongo
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongo
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: example
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          image: mongo
          imagePullPolicy: ""
          name: mongo
          ports:
          - containerPort: 27017
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-express
    name: mongo-express
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mongo-express
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: mongo-express
      spec:
        containers:
        - env:
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            value: example
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            value: root
          image: mongo-express
          imagePullPolicy: ""
          name: mongo-express
          ports:
          - containerPort: 8081
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: summaryservice
    name: summaryservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: summaryservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: summaryservice
      spec:
        containers:
        - env:
          - name: MongoDB__Host
            value: mongo
          image: leenpeen/summaryservice:latest
          imagePullPolicy: ""
          name: summaryservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: 
            requests:
              cpu: 250m
            limits: 
              cpu: 500m
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbit
    name: rabbit
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: rabbit
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: rabbit
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: Always
          name: rabbitmq
          ports:
          - containerPort: 15672
          - containerPort: 5672
          resources: 
            requests:
                cpu: 100m
                memory: 128Mi
            limits:
                cpu: 250m
                memory: 256Mi
        hostname: rabbit
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: aukiodb
    name: aukiodb
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: aukiodb
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: aukiodb
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: Your_password123
          image: mcr.microsoft.com/mssql/server
          imagePullPolicy: Always
          name: userdb
          ports:
          - containerPort: 5672
          - containerPort: 1433
          resources: 
            limits:
                cpu: 250m
                memory: 1.5Gi
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: userservice
    name: userservice
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: userservice
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o aukiodepl.yml
  
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: userservice
      spec:
        containers:
        - image: leenpeen/userservice:latest
          imagePullPolicy: Always
          name: userservice
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: 
            requests:
                cpu: 100m
                memory: 128Mi
            limits:
                cpu: 250m
                memory: 256Mi
          stdin: true
          tty: true
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o deployment.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: consul
    name: consul
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: consul
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yml -o deployment.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: consul
      spec:
        containers:
        - args:
          - consul
          - agent
          - -dev
          - -log-level=warn
          - -ui
          - -client=0.0.0.0
          image: consul:latest
          imagePullPolicy: Always
          name: consul
          ports:
          - containerPort: 8500
          resources: 
            requests:
                cpu: 100m
                memory: 40Mi
            limits:
                cpu: 250m
                memory: 120Mi
        hostname: consul
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}

- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: summaryservice-hpa
  spec:
    maxReplicas: 10 # define max replica count
    minReplicas: 1  # define min replica count
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: summaryservice
    targetCPUUtilizationPercentage: 50 # target CPU utilization 

kind: List
metadata: {}